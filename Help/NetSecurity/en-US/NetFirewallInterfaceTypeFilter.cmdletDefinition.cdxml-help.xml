<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-NetFirewallInterfaceTypeFilter</command:name>
      <command:verb>Get</command:verb>
      <command:noun>NetFirewallInterfaceTypeFilter</command:noun>
      <maml:description>
        <maml:para>Retrieves interface type filter objects from the target computer.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-NetFirewallInterfaceTypeFilter cmdlet returns the interface type filter objects with the input rules.</maml:para>
      <maml:para>Interface type filter objects represent the interface types associated with firewall and IPsec rules. The InterfaceType parameter of a single rule is represented in a separate NetFirewallInterfaceTypeFilter object. The filter to rule relationship is always one-to-one and is managed automatically. Rule parameters associated with filters can only be queried using filter objects.</maml:para>
      <maml:para>This cmdlet displays the interface types associated with firewall and IPsec rules. This allows for rule querying based on the InterfaceType parameter value; this cmdlet returns filter objects that may be further queried with the Where-Object (https://go.microsoft.com/fwlink/?LinkID=113423)cmdlet. This cmdlet also allows the interface type filters to be obtained by InterfaceType query. The resultant filters are passed into the Get-NetFirewallRule or Get-NetIPsecRule cmdlet to return the rules queried by interface type.</maml:para>
      <maml:para>To modify the interface type conditions, two methods can be used starting with the interface type filters returned by this cmdlet and optional additional querying.</maml:para>
      <maml:para>The array of NetFirewallInterfaceTypeFilter objects can be piped into the Get-NetFirewallRule or Get-NetIPsecrule cmdlet, which returns the rules associated with the filters. These rules are then piped into the Set-NetFirewallRule or Set-NetIPsecrule cmdlet where the interface properties can be configured.</maml:para>
      <maml:para>Alternatively, piping the array of NetFirewallInterfaceTypeFilter objects directly into the Set-NetFirewallInterfaceTypeFilter cmdlet allows the InterfaceType parameter of the rules to be modified.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-NetFirewallInterfaceTypeFilter</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>All</maml:name>
          <maml:description>
            <maml:para>Indicates that all of the interface type filters within the specified policy store are retrieved.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsJob</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Session">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession (https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966)cmdlet. The default is the current session on the local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
          <dev:type>
            <maml:name>CimSession[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GPOSession</maml:name>
          <maml:description>
            <maml:para>Specifies the network GPO from which to retrieve the rules to be retrieved.  This parameter is used in the same way as the PolicyStore parameter. When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back. On a busy Domain Controller (DC), this can be a slow and resource-heavy operation. A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back. This reduces the load on the DC and speeds up the Windows PowerShell cmdlets. To load a GPO Session, use the Open-NetGPO cmdlet. To save a GPO Session, use the Save-NetGPO cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PolicyStore</maml:name>
          <maml:description>
            <maml:para>Specifies the policy store from which to retrieve the rules to be retrieved.  A policy store is a container for firewall and IPsec policy.  The acceptable values for this parameter are:</maml:para>
            <maml:para>- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer. This policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer. Rules created in this store are attached to the ActiveStore and activated on the computer immediately.  - ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer. This is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH).  ---- GPOs are also policy stores. Computer GPOs can be specified as follows.  ------ `-PolicyStore hostname`. </maml:para>
            <maml:para>----  Active Directory GPOs can be specified as follows.</maml:para>
            <maml:para>------ `-PolicyStore domain.fqdn.com\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`.</maml:para>
            <maml:para>------ Such as the following.</maml:para>
            <maml:para>-------- `-PolicyStore localhost`</maml:para>
            <maml:para>-------- `-PolicyStore corp.contoso.com\FirewallPolicy`</maml:para>
            <maml:para>---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console.  - RSOP: This read-only store contains the sum of all GPOs applied to the local computer. </maml:para>
            <maml:para>- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012.</maml:para>
            <maml:para>- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.</maml:para>
            <maml:para>Optional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS.  - ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services. In addition, network isolation rules that are created for Windows Store application containers will appear in this policy store.  The default value is PersistentStore.  The Set-NetFirewallRule cmdlet cannot be used to add an object to a policy store. An object can only be added to a policy store at creation time with the Copy-NetFirewallRule cmdlet or with the New-NetFirewallRule cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ThrottleLimit</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-NetFirewallInterfaceTypeFilter</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsJob</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
          <maml:name>AssociatedNetFirewallRule</maml:name>
          <maml:description>
            <maml:para>Gets the interface type filter object associated with the specified firewall rule to be retrieved.  This parameter represents a firewall rule, which defines how traffic is filtered by the firewall. See the New-NetFirewallRule cmdlet for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimInstance</command:parameterValue>
          <dev:type>
            <maml:name>CimInstance</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Session">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession (https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966)cmdlet. The default is the current session on the local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
          <dev:type>
            <maml:name>CimSession[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GPOSession</maml:name>
          <maml:description>
            <maml:para>Specifies the network GPO from which to retrieve the rules to be retrieved.  This parameter is used in the same way as the PolicyStore parameter. When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back. On a busy Domain Controller (DC), this can be a slow and resource-heavy operation. A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back. This reduces the load on the DC and speeds up the Windows PowerShell cmdlets. To load a GPO Session, use the Open-NetGPO cmdlet. To save a GPO Session, use the Save-NetGPO cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PolicyStore</maml:name>
          <maml:description>
            <maml:para>Specifies the policy store from which to retrieve the rules to be retrieved.  A policy store is a container for firewall and IPsec policy.  The acceptable values for this parameter are:</maml:para>
            <maml:para>- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer. This policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer. Rules created in this store are attached to the ActiveStore and activated on the computer immediately.  - ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer. This is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH).  ---- GPOs are also policy stores. Computer GPOs can be specified as follows.  ------ `-PolicyStore hostname`. </maml:para>
            <maml:para>----  Active Directory GPOs can be specified as follows.</maml:para>
            <maml:para>------ `-PolicyStore domain.fqdn.com\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`.</maml:para>
            <maml:para>------ Such as the following.</maml:para>
            <maml:para>-------- `-PolicyStore localhost`</maml:para>
            <maml:para>-------- `-PolicyStore corp.contoso.com\FirewallPolicy`</maml:para>
            <maml:para>---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console.  - RSOP: This read-only store contains the sum of all GPOs applied to the local computer. </maml:para>
            <maml:para>- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012.</maml:para>
            <maml:para>- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.</maml:para>
            <maml:para>Optional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS.  - ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services. In addition, network isolation rules that are created for Windows Store application containers will appear in this policy store.  The default value is PersistentStore.  The Set-NetFirewallRule cmdlet cannot be used to add an object to a policy store. An object can only be added to a policy store at creation time with the Copy-NetFirewallRule cmdlet or with the New-NetFirewallRule cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ThrottleLimit</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-NetFirewallInterfaceTypeFilter</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsJob</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
          <maml:name>AssociatedNetIPsecRule</maml:name>
          <maml:description>
            <maml:para>Gets the address filter objects that are associated, via the pipeline, with the input IPsec rule to be retrieved.  A NetIPsecRule object represents an IPsec rule, which determines IPsec behavior. An IPsec rule can be associated with Phase1AuthSet, Phase2AuthSet, and NetIPsecQuickMode cryptographic sets. See the New-NetIPsecMainModeRule cmdlet for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimInstance</command:parameterValue>
          <dev:type>
            <maml:name>CimInstance</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Session">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession (https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966)cmdlet. The default is the current session on the local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
          <dev:type>
            <maml:name>CimSession[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GPOSession</maml:name>
          <maml:description>
            <maml:para>Specifies the network GPO from which to retrieve the rules to be retrieved.  This parameter is used in the same way as the PolicyStore parameter. When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back. On a busy Domain Controller (DC), this can be a slow and resource-heavy operation. A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back. This reduces the load on the DC and speeds up the Windows PowerShell cmdlets. To load a GPO Session, use the Open-NetGPO cmdlet. To save a GPO Session, use the Save-NetGPO cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PolicyStore</maml:name>
          <maml:description>
            <maml:para>Specifies the policy store from which to retrieve the rules to be retrieved.  A policy store is a container for firewall and IPsec policy.  The acceptable values for this parameter are:</maml:para>
            <maml:para>- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer. This policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer. Rules created in this store are attached to the ActiveStore and activated on the computer immediately.  - ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer. This is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH).  ---- GPOs are also policy stores. Computer GPOs can be specified as follows.  ------ `-PolicyStore hostname`. </maml:para>
            <maml:para>----  Active Directory GPOs can be specified as follows.</maml:para>
            <maml:para>------ `-PolicyStore domain.fqdn.com\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`.</maml:para>
            <maml:para>------ Such as the following.</maml:para>
            <maml:para>-------- `-PolicyStore localhost`</maml:para>
            <maml:para>-------- `-PolicyStore corp.contoso.com\FirewallPolicy`</maml:para>
            <maml:para>---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console.  - RSOP: This read-only store contains the sum of all GPOs applied to the local computer. </maml:para>
            <maml:para>- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012.</maml:para>
            <maml:para>- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.</maml:para>
            <maml:para>Optional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS.  - ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services. In addition, network isolation rules that are created for Windows Store application containers will appear in this policy store.  The default value is PersistentStore.  The Set-NetFirewallRule cmdlet cannot be used to add an object to a policy store. An object can only be added to a policy store at creation time with the Copy-NetFirewallRule cmdlet or with the New-NetFirewallRule cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ThrottleLimit</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-NetFirewallInterfaceTypeFilter</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsJob</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Session">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession (https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966)cmdlet. The default is the current session on the local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
          <dev:type>
            <maml:name>CimSession[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GPOSession</maml:name>
          <maml:description>
            <maml:para>Specifies the network GPO from which to retrieve the rules to be retrieved.  This parameter is used in the same way as the PolicyStore parameter. When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back. On a busy Domain Controller (DC), this can be a slow and resource-heavy operation. A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back. This reduces the load on the DC and speeds up the Windows PowerShell cmdlets. To load a GPO Session, use the Open-NetGPO cmdlet. To save a GPO Session, use the Save-NetGPO cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InterfaceType</maml:name>
          <maml:description>
            <maml:para>Specifies that only network connections made through the indicated interface types are subject to the requirements of this rule. This parameter specifies different authentication requirements for each of the three main network types.  The acceptable values for this parameter are: Any, Wired, Wireless, or RemoteAccess. The default value is Any.  Querying for rules with this parameter can only be performed using filter objects.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Any</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Wired</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Wireless</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RemoteAccess</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">InterfaceType[]</command:parameterValue>
          <dev:type>
            <maml:name>InterfaceType[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PolicyStore</maml:name>
          <maml:description>
            <maml:para>Specifies the policy store from which to retrieve the rules to be retrieved.  A policy store is a container for firewall and IPsec policy.  The acceptable values for this parameter are:</maml:para>
            <maml:para>- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer. This policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer. Rules created in this store are attached to the ActiveStore and activated on the computer immediately.  - ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer. This is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH).  ---- GPOs are also policy stores. Computer GPOs can be specified as follows.  ------ `-PolicyStore hostname`. </maml:para>
            <maml:para>----  Active Directory GPOs can be specified as follows.</maml:para>
            <maml:para>------ `-PolicyStore domain.fqdn.com\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`.</maml:para>
            <maml:para>------ Such as the following.</maml:para>
            <maml:para>-------- `-PolicyStore localhost`</maml:para>
            <maml:para>-------- `-PolicyStore corp.contoso.com\FirewallPolicy`</maml:para>
            <maml:para>---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console.  - RSOP: This read-only store contains the sum of all GPOs applied to the local computer. </maml:para>
            <maml:para>- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012.</maml:para>
            <maml:para>- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.</maml:para>
            <maml:para>Optional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS.  - ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services. In addition, network isolation rules that are created for Windows Store application containers will appear in this policy store.  The default value is PersistentStore.  The Set-NetFirewallRule cmdlet cannot be used to add an object to a policy store. An object can only be added to a policy store at creation time with the Copy-NetFirewallRule cmdlet or with the New-NetFirewallRule cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ThrottleLimit</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>All</maml:name>
        <maml:description>
          <maml:para>Indicates that all of the interface type filters within the specified policy store are retrieved.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AsJob</maml:name>
        <maml:description>
          <maml:para>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
        <maml:name>AssociatedNetFirewallRule</maml:name>
        <maml:description>
          <maml:para>Gets the interface type filter object associated with the specified firewall rule to be retrieved.  This parameter represents a firewall rule, which defines how traffic is filtered by the firewall. See the New-NetFirewallRule cmdlet for more information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">CimInstance</command:parameterValue>
        <dev:type>
          <maml:name>CimInstance</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
        <maml:name>AssociatedNetIPsecRule</maml:name>
        <maml:description>
          <maml:para>Gets the address filter objects that are associated, via the pipeline, with the input IPsec rule to be retrieved.  A NetIPsecRule object represents an IPsec rule, which determines IPsec behavior. An IPsec rule can be associated with Phase1AuthSet, Phase2AuthSet, and NetIPsecQuickMode cryptographic sets. See the New-NetIPsecMainModeRule cmdlet for more information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">CimInstance</command:parameterValue>
        <dev:type>
          <maml:name>CimInstance</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Session">
        <maml:name>CimSession</maml:name>
        <maml:description>
          <maml:para>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession (https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966)cmdlet. The default is the current session on the local computer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
        <dev:type>
          <maml:name>CimSession[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GPOSession</maml:name>
        <maml:description>
          <maml:para>Specifies the network GPO from which to retrieve the rules to be retrieved.  This parameter is used in the same way as the PolicyStore parameter. When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back. On a busy Domain Controller (DC), this can be a slow and resource-heavy operation. A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back. This reduces the load on the DC and speeds up the Windows PowerShell cmdlets. To load a GPO Session, use the Open-NetGPO cmdlet. To save a GPO Session, use the Save-NetGPO cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>InterfaceType</maml:name>
        <maml:description>
          <maml:para>Specifies that only network connections made through the indicated interface types are subject to the requirements of this rule. This parameter specifies different authentication requirements for each of the three main network types.  The acceptable values for this parameter are: Any, Wired, Wireless, or RemoteAccess. The default value is Any.  Querying for rules with this parameter can only be performed using filter objects.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">InterfaceType[]</command:parameterValue>
        <dev:type>
          <maml:name>InterfaceType[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PolicyStore</maml:name>
        <maml:description>
          <maml:para>Specifies the policy store from which to retrieve the rules to be retrieved.  A policy store is a container for firewall and IPsec policy.  The acceptable values for this parameter are:</maml:para>
          <maml:para>- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer. This policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer. Rules created in this store are attached to the ActiveStore and activated on the computer immediately.  - ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer. This is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH).  ---- GPOs are also policy stores. Computer GPOs can be specified as follows.  ------ `-PolicyStore hostname`. </maml:para>
          <maml:para>----  Active Directory GPOs can be specified as follows.</maml:para>
          <maml:para>------ `-PolicyStore domain.fqdn.com\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`.</maml:para>
          <maml:para>------ Such as the following.</maml:para>
          <maml:para>-------- `-PolicyStore localhost`</maml:para>
          <maml:para>-------- `-PolicyStore corp.contoso.com\FirewallPolicy`</maml:para>
          <maml:para>---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console.  - RSOP: This read-only store contains the sum of all GPOs applied to the local computer. </maml:para>
          <maml:para>- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012.</maml:para>
          <maml:para>- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.</maml:para>
          <maml:para>Optional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS.  - ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services. In addition, network isolation rules that are created for Windows Store application containers will appear in this policy store.  The default value is PersistentStore.  The Set-NetFirewallRule cmdlet cannot be used to add an object to a policy store. An object can only be added to a policy store at creation time with the Copy-NetFirewallRule cmdlet or with the New-NetFirewallRule cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ThrottleLimit</maml:name>
        <maml:description>
          <maml:para>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetConSecRule[]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects. The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetFirewallRule</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects. The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetInterfaceTypeFilter[]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects. The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt;Get-NetFirewallInterfaceTypeFilter -PolicyStore ActiveStore


This cmdlet shows the same information in a dynamically-sized, formatted table.
PS C:\&gt;Get-NetFirewallInterfaceTypeFilter -PolicyStore ActiveStore | Format-Table</dev:code>
        <dev:remarks>
          <maml:para>This example retrieves the interface types associated with all the rules in the active store. Running this cmdlet without specifying the policy store retrieves the persistent store.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>PS C:\&gt;Get-NetFirewallRule -DisplayName "Contoso Messenger" | Get-NetFirewallInterfaceTypeFilter</dev:code>
        <dev:remarks>
          <maml:para>This example gets the interface aliases associated with a particular firewall rule.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>PS C:\&gt;Get-FirewallRule -DisplayName "Contoso Messenger" | Get-NetFirewallInterfaceTypeFilter | Set-NetFirewallInterfaceTypeFilter -InterfaceType Any


This cmdlet is an alternate method of performing the task.
PS C:\&gt;Set-NetFirewallRule -DisplayName "Contoso Messenger" -InterfaceType Any</dev:code>
        <dev:remarks>
          <maml:para>This example modifies the interface type field of a particular firewall rule.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 4 --------------------------</maml:title>
        <dev:code>PS C:\&gt;Get-NetFirewallInterfaceTypeFilter -InterfaceType Wired | Set-NetFirewallInterfaceTypeFilter -InterfaceType Any</dev:code>
        <dev:remarks>
          <maml:para>This example modifies the interface type for all of the rules previously associated with the wired interface type.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 5 --------------------------</maml:title>
        <dev:code>PS C:\&gt;Get-NetIPsecRule -Group DirectAccess | Get-NetFirewallInterfaceTypeFilter | Where-Object -Property { $_.InterfaceType -Eq "Wired" } | Set-NetFirewallInterfaceTypeFilter -InterfaceType RemoteAccess</dev:code>
        <dev:remarks>
          <maml:para>This example modifies the interface type associated with all of the IPsec rules in a specified group.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/netsecurity/get-netfirewallinterfacetypefilter?view=windowsserver2022-ps&amp;wt.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Format-Table</maml:linkText>
        <maml:uri>https://go.microsoft.com/fwlink/p/?LinkId=113303</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Where-Object</maml:linkText>
        <maml:uri>https://go.microsoft.com/fwlink/p/?LinkId=113423</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Copy-NetIPsecRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NetFirewallRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-NetFirewallRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-NetIPsecMainModeRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Open-NetGPO</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Save-NetGPO</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NetFirewallInterfaceFilter</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NetFirewallInterfaceTypeFilter</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NetFirewallRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-NetFirewallInterfaceTypeFilter</command:name>
      <command:verb>Set</command:verb>
      <command:noun>NetFirewallInterfaceTypeFilter</command:noun>
      <maml:description>
        <maml:para>Modifies interface type filter objects, thereby modifying the interface type conditions of the firewall or IPsec rules.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-NetFirewallInterfaceTypeFilter cmdlet modifies the interface types associated with the input firewall or IPsec rules.</maml:para>
      <maml:para>See theGet-NetFirewallInterfaceTypeFilter cmdlet for more information about the interface type filters.</maml:para>
      <maml:para>To modify the interface type conditions, two methods can be used starting with the interface type filters returned by the Get-NetFirewallInterfaceTypeFilter cmdlet and optional additional querying. </maml:para>
      <maml:para>- The network firewall interface type filter objects are piped into the Get-NetFirewallRule or Get-NetIPsecRule cmdlet. The Get-NetFirewallRule or Get-NetIPsecRule cmdlet returns the rules associated with the filters and pipes the rules into the Set-NetFirewallRule or Set-NetIPsecRule cmdlet, which configures the interface properties.  - Alternatively, the network firewall interface type filter objects are piped directly to this cmdlet, which modifies the InterfaceType parameter value of the rules.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-NetFirewallInterfaceTypeFilter</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsJob</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Session">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession (https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966)cmdlet. The default is the current session on the local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
          <dev:type>
            <maml:name>CimSession[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>GPOSession</maml:name>
          <maml:description>
            <maml:para>Targets the network GPO from which to retrieve the rules to be modified.  This parameter is used in the same way as the PolicyStore parameter. When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back. On a busy Domain Controller (DC), this can be a slow and resource-heavy operation. A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back. This reduces the load on the DC and speeds up the Windows PowerShell cmdlets. To load a GPO Session, use the Open-NetGPO cmdlet. To save a GPO Session, use the Save-NetGPO cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InterfaceType</maml:name>
          <maml:description>
            <maml:para>Specifies that only network connections made through the indicated interface types are subject to the requirements of this rule. This parameter specifies different authentication requirements for each of the three main network types.  The acceptable values for this parameter are: Any, Wired, Wireless, or RemoteAccess. The default value is Any.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Any</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Wired</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Wireless</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RemoteAccess</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">InterfaceType</command:parameterValue>
          <dev:type>
            <maml:name>InterfaceType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PolicyStore</maml:name>
          <maml:description>
            <maml:para>Targets the policy store from which to retrieve the rules to be modified.  A policy store is a container for firewall and IPsec policy.  The acceptable values for this parameter are:</maml:para>
            <maml:para>- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer. This policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer. Rules created in this store are attached to the ActiveStore and activated on the computer immediately.  - ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer. This is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH).  ---- GPOs are also policy stores. Computer GPOs can be specified as follows.  ------ `-PolicyStore hostname`. </maml:para>
            <maml:para>---- Active Directory GPOs can be specified as follows.</maml:para>
            <maml:para>------ `-PolicyStore domain.fqdn.com\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`.</maml:para>
            <maml:para>------ Such as the following.</maml:para>
            <maml:para>-------- `-PolicyStore localhost`</maml:para>
            <maml:para>-------- `-PolicyStore corp.contoso.com\FirewallPolicy`</maml:para>
            <maml:para>---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console.  - RSOP: This read-only store contains the sum of all GPOs applied to the local computer. </maml:para>
            <maml:para>- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012.</maml:para>
            <maml:para>- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.</maml:para>
            <maml:para>Optional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS.  - ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services. In addition, network isolation rules that are created for Windows Store application containers will appear in this policy store. </maml:para>
            <maml:para>The default value is PersistentStore.  The Set-NetIPsecRule cmdlet cannot be used to add an object to a policy store. An object can only be added to a policy store at creation time with the Copy-NetIPsecRule cmdlet or with the New-NetIPsecRule cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ThrottleLimit</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-NetFirewallInterfaceTypeFilter</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsJob</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Session">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession (https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966)cmdlet. The default is the current session on the local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
          <dev:type>
            <maml:name>CimSession[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies the input object that is used in a pipeline command.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">CimInstance[]</command:parameterValue>
          <dev:type>
            <maml:name>CimInstance[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InterfaceType</maml:name>
          <maml:description>
            <maml:para>Specifies that only network connections made through the indicated interface types are subject to the requirements of this rule. This parameter specifies different authentication requirements for each of the three main network types.  The acceptable values for this parameter are: Any, Wired, Wireless, or RemoteAccess. The default value is Any.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Any</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Wired</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Wireless</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RemoteAccess</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">InterfaceType</command:parameterValue>
          <dev:type>
            <maml:name>InterfaceType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ThrottleLimit</maml:name>
          <maml:description>
            <maml:para>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
          <dev:type>
            <maml:name>Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AsJob</maml:name>
        <maml:description>
          <maml:para>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Session">
        <maml:name>CimSession</maml:name>
        <maml:description>
          <maml:para>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession (https://go.microsoft.com/fwlink/p/?LinkId=227967) or [Get-CimSession](https://go.microsoft.com/fwlink/p/?LinkId=227966)cmdlet. The default is the current session on the local computer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
        <dev:type>
          <maml:name>CimSession[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>GPOSession</maml:name>
        <maml:description>
          <maml:para>Targets the network GPO from which to retrieve the rules to be modified.  This parameter is used in the same way as the PolicyStore parameter. When modifying GPOs in Windows PowerShell®, each change to a GPO requires the entire GPO to be loaded, modified, and saved back. On a busy Domain Controller (DC), this can be a slow and resource-heavy operation. A GPO Session loads a domain GPO onto the local computer and makes all changes in a batch, before saving it back. This reduces the load on the DC and speeds up the Windows PowerShell cmdlets. To load a GPO Session, use the Open-NetGPO cmdlet. To save a GPO Session, use the Save-NetGPO cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies the input object that is used in a pipeline command.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">CimInstance[]</command:parameterValue>
        <dev:type>
          <maml:name>CimInstance[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>InterfaceType</maml:name>
        <maml:description>
          <maml:para>Specifies that only network connections made through the indicated interface types are subject to the requirements of this rule. This parameter specifies different authentication requirements for each of the three main network types.  The acceptable values for this parameter are: Any, Wired, Wireless, or RemoteAccess. The default value is Any.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">InterfaceType</command:parameterValue>
        <dev:type>
          <maml:name>InterfaceType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PolicyStore</maml:name>
        <maml:description>
          <maml:para>Targets the policy store from which to retrieve the rules to be modified.  A policy store is a container for firewall and IPsec policy.  The acceptable values for this parameter are:</maml:para>
          <maml:para>- PersistentStore: Sometimes called static rules, this store contains the persistent policy for the local computer. This policy is not from GPOs, and has been created manually or programmatically (during application installation) on the computer. Rules created in this store are attached to the ActiveStore and activated on the computer immediately.  - ActiveStore: This store contains the currently active policy, which is the sum of all policy stores that apply to the computer. This is the resultant set of policy (RSOP) for the local computer (the sum of all GPOs that apply to the computer), and the local stores (the PersistentStore, the static Windows service hardening (WSH), and the configurable WSH).  ---- GPOs are also policy stores. Computer GPOs can be specified as follows.  ------ `-PolicyStore hostname`. </maml:para>
          <maml:para>---- Active Directory GPOs can be specified as follows.</maml:para>
          <maml:para>------ `-PolicyStore domain.fqdn.com\GPO_Friendly_Namedomain.fqdn.comGPO_Friendly_Name`.</maml:para>
          <maml:para>------ Such as the following.</maml:para>
          <maml:para>-------- `-PolicyStore localhost`</maml:para>
          <maml:para>-------- `-PolicyStore corp.contoso.com\FirewallPolicy`</maml:para>
          <maml:para>---- Active Directory GPOs can be created using the New-GPO cmdlet or the Group Policy Management Console.  - RSOP: This read-only store contains the sum of all GPOs applied to the local computer. </maml:para>
          <maml:para>- SystemDefaults: This read-only store contains the default state of firewall rules that ship with Windows Server® 2012.</maml:para>
          <maml:para>- StaticServiceStore: This read-only store contains all the service restrictions that ship with Windows Server 2012.</maml:para>
          <maml:para>Optional and product-dependent features are considered part of Windows Server 2012 for the purposes of WFAS.  - ConfigurableServiceStore: This read-write store contains all the service restrictions that are added for third-party services. In addition, network isolation rules that are created for Windows Store application containers will appear in this policy store. </maml:para>
          <maml:para>The default value is PersistentStore.  The Set-NetIPsecRule cmdlet cannot be used to add an object to a policy store. An object can only be added to a policy store at creation time with the Copy-NetIPsecRule cmdlet or with the New-NetIPsecRule cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ThrottleLimit</maml:name>
        <maml:description>
          <maml:para>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of `0` is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetInterfaceTypeFilter[]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects. The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimInstance#root\StandardCimv2\MSFT_NetInterfaceTypeFilter[]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>The `Microsoft.Management.Infrastructure.CimInstance` object is a wrapper class that displays Windows Management Instrumentation (WMI) objects. The path after the pound sign (`#`) provides the namespace and class name for the underlying WMI object.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt;$nfwInterfaceTypeFilter = ( Get-FirewallRule -DisplayName "Contoso Messenger" | Get-NetFirewallInterfaceTypeFilter )



PS C:\&gt;Set-NetFirewallInterfaceTypeFilter -InterfaceType Any -InputObject $nfwInterfaceTypeFilter


This cmdlet can be run using only the pipeline.
PS C:\&gt;Get-FirewallRule -DisplayName "Contoso Messenger" | Get-NetFirewallInterfaceTypeFilter | Set-NetFirewallInterfaceTypeFilter -InterfaceType Any


This cmdlet can be run without the pipeline.
PS C:\&gt;Set-NetFirewallRule -DisplayName "Contoso Messenger" -InterfaceType Any</dev:code>
        <dev:remarks>
          <maml:para>This example modifies the InterfaceType parameter value for a particular firewall rule.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>PS C:\&gt;$nfwInterfaceTypeFilter = ( Get-NetFirewallInterfaceTypeFilter -InterfaceType Wired )



PS C:\&gt;Set-NetFirewallInterfaceTypeFilter -InterfaceType Any -InputObject $nfwInterfaceTypeFilter


This cmdlet can be run using only the pipeline.
PS C:\&gt;Get-NetFirewallInterfaceTypeFilter -InterfaceType Wired | Set-NetFirewallInterfaceTypeFilter -InterfaceType Any</dev:code>
        <dev:remarks>
          <maml:para>This example modifies the interface type for all of the rules previously associated with the Wired interface type.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>PS C:\&gt;$nfwInterfaceTypeFilter = ( Get-NetIPsecRule -Group DirectAccess | Get-NetFirewallInterfaceTypeFilter )



PS C:\&gt;$nfwInterfaceTypeFilterWired = Where-Object -Property { $_.InterfaceType -Eq "Wired" } -InputObject $nfwInterfaceTypeFilter



PS C:\&gt;Set-NetFirewallInterfaceTypeFilter -InterfaceType RemoteAccess -InputObject $nfwInterfaceTypeFilterWired


This cmdlet can be run using only the pipeline.
PS C:\&gt;Get-NetIPsecRule -Group DirectAccess | Get-NetFirewallInterfaceTypeFilter | Where-Object -Property { $_.InterfaceType -Eq "Wired" } | Set-NetFirewallInterfaceTypeFilter -InterfaceType RemoteAccess</dev:code>
        <dev:remarks>
          <maml:para>This example modifies the interface type associated with all of the IPsec rules in a specified group.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/netsecurity/set-netfirewallinterfacetypefilter?view=windowsserver2022-ps&amp;wt.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Where-Object</maml:linkText>
        <maml:uri>https://go.microsoft.com/fwlink/p/?LinkId=113423</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Copy-NetIPsecRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NetFirewallInterfaceTypeFilter</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NetFirewallRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-NetIPsecRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-NetFirewallRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-NetIPsecRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Open-NetGPO</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Save-NetGPO</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NetFirewallRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-NetIPsecRule</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-GPO</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>